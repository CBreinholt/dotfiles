#
# zshrc
#
# Configurations for zsh

# Load aliases and shortcuts if existent.
[[ -f "${XDG_CONFIG_HOME:-$HOME/.config}/aliasrc" ]] && . "${XDG_CONFIG_HOME:-$HOME/.config}/aliasrc"

# Enable colors and change prompt:
autoload -U colors && colors	
PS1="%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M %{$fg[magenta]%}%~%{$fg[red]%}]%{$reset_color%}$%b "
setopt autocd		# Automatically cd into typed directory.
#stty stop undef		# Disable ctrl-s to freeze terminal.

# History in cache directory:
HISTFILE="${XDG_CONFIG_HOME:-$HOME/.config}/zsh/.zsh_history"
HISTSIZE=1000
SAVEHIST=2000
HISTCONTROL=ignoreboth

# Basic auto/tab complete:
autoload -U compinit
zstyle ':completion:*' menu select
zmodload zsh/complist
compinit
_comp_options+=(globdots)		# Include hidden files.

# vi mode
bindkey -v
export KEYTIMEOUT=1

# Use vim keys in tab complete menu:
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history
bindkey -v '^?' backward-delete-char

# Change cursor shape for different vi modes.
function zle-keymap-select {
  if [[ ${KEYMAP} == vicmd ]] ||
     [[ $1 = 'block' ]]; then
    echo -ne '\e[1 q'
  elif [[ ${KEYMAP} == main ]] ||
       [[ ${KEYMAP} == viins ]] ||
       [[ ${KEYMAP} = '' ]] ||
       [[ $1 = 'beam' ]]; then
    echo -ne '\e[5 q'
  fi
}
zle -N zle-keymap-select
zle-line-init() {
    zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
    echo -ne "\e[5 q"
}
zle -N zle-line-init
echo -ne '\e[5 q' # Use beam shape cursor on startup.
preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.

bindkey '^[[P' delete-char

# Edit line in vim with ctrl-e:
autoload edit-command-line; zle -N edit-command-line
bindkey '^e' edit-command-line

# Setup oh-my-posh shell
eval "$(oh-my-posh init zsh --config /c/Users/Christopher/Documents/PowerShell/nord_1.omp.json)"

# Load zsh-syntax-highlighting; should be last.
#source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh 2>/dev/null

# Spaceship prompt
#SPACESHIP_PROMPT_ORDER=(
  #exit_code     # Exit code section
  #exec_time     # Execution time
  #time          # Time stamps section
  #jobs          # Background jobs indicator
  #user          # Username section
  #host          # Hostname section
  #dir           # Current directory section
  #git           # Git section (git_branch + git_status)
  #node          # Node.js section
  #venv          # virtualenv section
  #pyenv         # Pyenv section
  #vi_mode       # Vi-mode indicator
  #char          # Prompt character
#)

#SPACESHIP_TIME_SHOW=false
#SPACESHIP_TIME_PREFIX=''
#SPACESHIP_USER_SHOW=true
#SPACESHIP_USER_COLOR="green"
#SPACESHIP_USER_PREFIX=''
#SPACESHIP_USER_SUFFIX=''
#SPACESHIP_HOST_SHOW=true
#SPACESHIP_HOST_PREFIX="%{$fg[green]%}@"
#SPACESHIP_DIR_SHOW=always
#SPACESHIP_DIR_PREFIX="%{$fg[blue]%}["
#SPACESHIP_DIR_SUFFIX="%{$fg[blue]%}]"
#SPACESHIP_DIR_COLOR="cyan"
#SPACESHIP_VI_MODE_SHOW=false
#SPACESHIP_EXEC_TIME_SHOW=true
#SPACESHIP_GIT_SHOW=true
#SPACESHIP_GIT_PREFIX=" "
#SPACESHIP_CHAR_SYMBOL="$ "
#SPACESHIP_PROMPT_ADD_NEWLINE=false
#SPACESHIP_PROMPT_SEPARATE_LINE=true
#SPACESHIP_PROMPT_FIRST_PREFIX_SHOW=true
#autoload -U promptinit; promptinit
#prompt spaceship#
